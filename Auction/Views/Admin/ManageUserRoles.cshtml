@model Auction.Models.ManageUserRoleModel
@{
    ViewBag.Title = "ManageUserRoles";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@section Scripts
{
    <script type="text/javascript">
        function OnSuccess(data) {
            var roles = $('#roles');
            roles.empty();
            if (typeof data == 'string' || data instanceof String)
                roles.append('<li class="list-group-item">' + data + '</li>');
            else
                for (var i = 0; i < data.length; i++)
                    roles.append('<li class="list-group-item">' + data[i] + '</li>');
        }
        function OnSuccessAdd(data) {
            var roles = $('#roleadd');
            roles.empty();
            roles.append('<li class="list-group-item">' + data + "</li>");
        }
        function OnSuccessDel(data) {
            var roles = $('#roledel');
            roles.empty();
            roles.append('<li class="list-group-item">' + data + "</li>");
        }
    </script>
}

<h2>Role Add to User</h2>

@using (Ajax.BeginForm("RoleAddToUser", "Admin", new AjaxOptions
{
    LoadingElementDuration = 500,
    LoadingElementId = "loadingadd",
    OnSuccess = "OnSuccessAdd"
}))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    <div class="form-group">
        <label class="control-label">Username</label>
        @Html.DropDownList("UserName", Model.Users.Select(x => new SelectListItem { Text = x.Username, Value = x.UserId }), new { @class = "form-control" })
        <label class="control-label">Role Name</label>
        @Html.DropDownList("RoleName", Model.Roles.Select(x=> new SelectListItem{Text = x.Role,Value = x.RoleId}), new { @class = "form-control" })

    </div>
    <input class="btn btn-success" type="submit" value="Add" />
}
<div id="loadingadd" style="display: none; color: rgb(0, 255, 184); font-weight: bold;">
    <span><h3>Wait...</h3></span>
</div>
<div id="roleadd">

</div>
<hr />
<h3>Get Roles for a User</h3>
@using (Ajax.BeginForm("GetRoles", "Admin", new AjaxOptions
{
    LoadingElementId = "loading",
    LoadingElementDuration = 500,
    HttpMethod = "Get",
    OnSuccess = "OnSuccess"
}))
{
    <div class="form-group">
        <label class="control-label">Username</label>
        @Html.DropDownList("UserName", Model.Users.Select(x => new SelectListItem { Text = x.Username, Value = x.UserId }), new { @class = "form-control" })
    </div>
    <input class="btn btn-info" type="submit" value="Get Roles for this User" />
}

<div id="loading" style="display: none; color: rgb(0, 255, 184); font-weight: bold;">

    <span><h3>Wait...</h3></span>
</div>
<div id="roles">

</div>


<hr />
<h3>Delete A User from a Role</h3>

@using (Ajax.BeginForm("DeleteRoleForUser", "Admin",new AjaxOptions
{
    LoadingElementId = "loadingdel",
    LoadingElementDuration = 500,
    OnSuccess = "OnSuccessDel"
}))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <div class="form-group">
        <label class="control-label">Username</label>
        @Html.DropDownList("UserName", Model.Users.Select(x => new SelectListItem { Text = x.Username, Value = x.UserId }), new { @class = "form-control" })
        <label class="control-label">Role Name</label>
        @Html.DropDownList("RoleName", Model.Roles.Select(x=>new SelectListItem{Text = x.Role,Value = x.RoleId}), new { @class = "form-control" })

    </div>

    <input class="btn btn-success" type="submit" value="Delete user from role" />
}

<div id="loadingdel" style="display: none; color: rgb(0, 255, 184); font-weight: bold;">
    <span><h3>Wait...</h3></span>
</div>
<div id="roledel">

</div>